{"name":"ViennaNGS","tagline":"A Perl extension and collection of utilities for Next-Generation Sequencing (NGS) data analysis","body":"# Bio::ViennaNGS 0.12_13\r\n\r\nBio::ViennaNGS is a distribution of Perl modules and utilities for\r\nbuilding efficient Next-Generation Sequencing (NGS) analysis\r\npipelines. It covers various aspects of NGS data analysis, including\r\n(but not limited to) conversion of sequence annotation, evaluation of\r\nmapped data, expression quantification and visualization.\r\n\r\nBio::ViennaNGS is shipped with a complementary set of modules/classes:\r\n\r\n- Bio::ViennaNGS::AnnoC\r\n  A Moose interface for storage and conversion of sequence annotation\r\n  data.\r\n\r\n- Bio::ViennaNGS::Bam\r\n  Routines for high-level manipulation of BAM files.\r\n\r\n- Bio::ViennaNGS::BamStat\r\n  A Moose-based class for collecting mapping statistics.\r\n\r\n- Bio::ViennaNGS::BamStatSummary\r\n  A Moose interface for processing Bio::ViennaNGS::BamStat objects on\r\n  a set of BAM files.\r\n\r\n- Bio::ViennaNGS::Bed \r\n  A Moose interface for manipulation of genomic interval data in BED\r\n  format.\r\n\r\n- Bio::ViennaNGS::Expression\r\n  A Moose interface for computation of normalized gene / transcript\r\n  expression based on read counts.\r\n\r\n- Bio::ViennaNGS::Fasta\r\n  Routines for accessing genomic sequences implemented through a Moose\r\n  interface to Bio::DB::Fasta.\r\n\r\n- Bio::ViennaNGS::Feature\r\n  A Moose-ish BED6 wrapper.  \r\n\r\n- Bio::ViennaNGS::FeatureChain\r\n  Yet another Moose class for chaining gene annotation features. \r\n\r\n- Bio::ViennaNGS::MinimalFeature\r\n  A Moose interface for handling elementary gene annotation. \r\n\r\n- Bio::ViennaNGS::SpliceJunc\r\n  A collection of routines for alternative splicing analysis.  \r\n\r\n- Bio::ViennaNGS::Tutorial\r\n  A comprehensive tutorial of the Bio::ViennaNGS core routines with\r\n  real-world NGS data.\r\n\r\n- Bio::ViennaNGS::UCSC\r\n  Routines for visualization of genomics data with the UCSC genome\r\n  browser.\r\n\r\n- Bio::ViennaNGS::Util\r\n  A collection of wrapper routines for commonly used third-party NGS\r\n  utilities, code for normalization of gene expression values based on\r\n  read count data and a set of utility functions.\r\n\r\n\r\nUTILITIES\r\n\r\nIn addition, Bio::ViennaNGS comes with a collection of utility\r\nprograms for accomplishing routine tasks often required in NGS data\r\nprocessing. These utilities serve as reference implementation of the\r\nroutines implemented in the (sub)modules:\r\n\r\nassembly_hub_constructor.pl:\r\nThe UCSC genome browser offers the possibility to visualize any\r\norganism (including organisms that are not included in the standard\r\nUCSC browser bundle) through hso called 'Assembly Hubs'. This script\r\nconstructs Assembly Hubs from genomic sequence and annotation data.\r\n\r\nbam_quality_stat.pl:\r\nCompute sophisticated quality/mapping statistics for a set of BAM\r\nalignment files and produce publication-ready graphics.\r\n\r\nbam_split.pl: \r\nSplit (paired-end and single-end) BAM alignment files by strand and compute\r\nstatistics. Optionally create BED output, as well as normalized bedGraph\r\nand bigWig files for coverage visualization in genome browsers (see\r\ndependencies on third-patry tools below).\r\n\r\nbam_to_bigWig.pl:\r\nProduce bigWig coverage profiles from (aligned) BAM files, explicitly\r\nconsidering strandedness. The most natural use case of this tool is to\r\ncreate strand-aware coverage profiles in bigWig format for genome browser\r\nvisualization.\r\n\r\nbam_uniq.pl:\r\nExtract unique and multi mapping reads from BAM alignment files and create\r\na separate BAM file for both uniqe (.uniq.) and multi (.mult.) mappers.\r\n\r\nbed2bedGraph.pl:\r\nConvert BED files to (strand specific) bedGraph files, allowing\r\nadditional annotation and automatic generation of bedGraph files which can\r\neasily be converted to big-type files for easy UCSC visualization.\r\n\r\nextend_bed.pl:\r\nExtend genomic features in BED files by a certain number of nucleotides,\r\neither on both sides or specifically at the 5' or 3' end, respectively.\r\n\r\ngff2bed.pl:\r\nConvert RefSeq GFF3 annotation files to BED12 format. Individual BED12\r\nfiles are created for each feature type (CDS/tRNA/rRNA/etc.). Tested with\r\nRefSeq bacterial GFF3 annotation.  \r\n\r\nkmer_analysis.pl:\r\nCount k-mers of predefined length in FastQ and Fasta files\r\n\r\nMEME_xml_motif_extractor.pl:\r\nCompute simple statistics from MEME XML output and return a list of found\r\nmotifs with the number of sequences containing those motifs as well as nice\r\nggplot graphs.\r\n\r\nmotiffinda.pl: [ currently broken ]\r\nFind motifs in annotated sequence features. The motif can be provided as\r\nregular expression.\r\n\r\nnewUCSCdb.pl:\r\nCreate a new genome database (ie. add a novel organism) in a local\r\ninstance of the UCSC genome browser.\r\n\r\nnormalize_multicov.pl: \r\nCompute normalized expression data in TPM/RPKM from (raw) read counts in\r\nbedtools multicov format. TPM reference: Wagner et al, Theory\r\nBiosci. 131(4), pp 281-85 (2012)\r\n\r\nsj_visualizer.pl:\r\nConvert splice junctions from mapped RNA-seq data in segemehl BED6 splice\r\njunction format to BED12 for easy visualization in genome browsers.\r\n\r\nsplice_site_summary.pl:\r\nIdentify and characterize splice junctions from RNA-seq data by\r\nintersecting them with annotated splice junctions.\r\n\r\nnewUCSCdb.pl:\r\nCreate a new genome database for a locally installed instance of the UCSC\r\ngenome browser. Based on\r\nhttp://genomewiki.ucsc.edu/index.php/Building_a_new_genome_database\r\n\r\ntrack_hub_constructor.pl:\r\nAnalogous to assembly_hub_constructor.pl, construct a Track Hub for an\r\norganism listed in the UCSC Genome Browser.\r\n\r\ntrim_fastq.pl:\r\nTrim sequence and quality string fields in a Fastq file by user\r\ndefined length.\r\n\r\nTUTORIAL\r\n\r\nSee Bio::ViennaNGS::Tutorial \r\n\r\nINSTALLATION\r\n\r\nTo install this module type the following:\r\n\r\n   perl Makefile.PL\r\n   make\r\n   make test\r\n   make install\r\n\r\n\r\nDEPENDENCIES\r\n\r\nBio::ViennaNGS and its submodules require a set of third-party libraries\r\nand packages that are not part of the Perl core distribution:\r\n\r\n  Bio::Perl >= 1.00690001\r\n  Bio::DB::Sam >= 1.39\r\n  Bio::DB::Fasta\r\n  Bio::Tools::GFF\r\n  File::Share\t\r\n  Template\r\n  Moose\r\n  Moose::Util::TypeConstraints\r\n  Path::Class\r\n  namespace::autoclean\r\n  Tie::Hash::Indexed\r\n  MooseX::Clone\r\n  MooseX::InstanceTracking\r\n\r\nThe  modules listed below are only reuqired by some of the utilities. You will\r\nonly need to install them if you intend to use the reference utilities:\r\n\r\n  PerlIO::gzip\r\n  Math::Round\r\n  XML::Simple\r\n  Statistics::R\r\n\r\nComputation of BigWig files from BAM is accomplished via two calls to\r\nthird-party tools: 'genomeCoverageBed' from the BEDtools suite\r\n(http://bedtools.readthedocs.org/en/latest/content/tools/genomecov.html) is\r\nused to create a BedGraph coverage file at first place. In a second step,\r\nthe BedGraph is converted to BigWig by 'bedGraphToBigWig', a UCSC Genome\r\nBrowser utility (http://hgdownload.cse.ucsc.edu/admin/exe/). Please ensure\r\nthat all third-party utilities are available on your system and accessible\r\nto the Perl interpreter.\r\n\r\n\r\nSOURCE AVAILABILITY\r\n\r\nThis source is available on Github: \r\n              https://github.com/mtw/Bio-ViennaNGS\r\n\r\n\r\nPAPERS\r\n\r\nIf the Bio::ViennaNGS suite is useful for your work or if you use any\r\ncomponent of ViennaNGS in a custom pipeline, please cite the following\r\npublication:\r\n\r\n\"ViennaNGS - A toolbox for building efficient next-generation sequencing\r\nanalysis pipelines\"\r\nMichael T. Wolfinger, Joerg Fallmann, Florian Eggenhofer and Fabian Amman\r\nbioRxiv doi: http://dx.doi.org/10.1101/013011\r\n\r\n\r\nNOTES\r\n\r\nThe Bio::ViennaNGS suite is actively developed and tested on different\r\nflavours of Linux and Mac OS X. We have taken care of writing\r\nplatform-independent code that should run out of the box on most UNIX-based\r\nsystems, however we do not have access to machines running Microsoft\r\nWindows. As such, we have not tested and will not test Windows\r\ncompatibility.\r\n\r\n\r\nBUGS\r\n\r\nPlease report bugs through the Github issue tracker at\r\nhttps://github.com/mtw/Bio-ViennaNGS/issues\r\n\r\n\r\nAUTHORS\r\n\r\nMichael T. Wolfinger <michael@wolfinger.eu>\r\nJoerg Fallmann <fall@tbi.univie.ac.at>\r\nFlorian Eggenhofer <florian.eggenhofer@tbi.univie.ac.at>\r\nFabian Amman <fabian@tbi.univie.ac.at>\r\n\r\n\r\nCOPYRIGHT AND LICENCE\r\n\r\nCopyright (C) 2014-2015 Michael T. Wolfinger <michael@wolfinger.eu>\r\n\r\nThis library is free software; you can redistribute it and/or modify it\r\nunder the same terms as Perl itself, either Perl version 5.10.0 or, at your\r\noption, any later version of Perl 5 you may have available.\r\n\r\nThis program is distributed in the hope that it will be useful, but WITHOUT\r\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\nFITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\r\nmore details.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}